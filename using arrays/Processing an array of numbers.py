'''На вход программа получает набор чисел, заканчивающихся решеткой.
Вам требуется найти: среднее, максимальное и минимальное число в последовательности.
Так же нужно вывести cумму остатков от деления суммы троек на последнее число тройки (каждые 3 введеных числа образуют тройку).

Для понимания рассмотрим пример входных данных: 1 2 3 4 5 6
среднее: (1 + 2 + 3 + 4 + 5 + 6) / 6 = 3.5
максимум: 6 минимум: 1
сумма остатков троек: (1 + 2 + 3) mod 3 + (4 + 5 + 6) mod 6 = 6 mod 3 + 15 mod 6 = 0 + 3 = 3

Среднее выводить, округлив до трех знаков после запятой. Для этого нужно использовать функцию round(x, 3)

Того ваша программа должна вывести: 3.5 6 1 3

Подумайте, имеет ли смысл хранить всю последовательность.

Формат входных данных
Последовательность чисел, заканчивающися '#'. Все числа от 1 до 100. Количество чисел в последовательности кратно трем. Одно число на строку.

Формат выходных данных
Четыре числа, разделенных пробелом.'''

N = []
B = []
x = 0
while True:

    x = input()
    B = x.split()
    if len(B) > 1:
        B.append(B[0])
        B.remove(B[0])
        for i in B:
            print(i, end=' ')

        break

    for i in range(len(B)):
        if B[i].isdigit():
            N.append(abs(int(B[i])))

    if x == str('#'):
        break

if len(N) != 0:
    s = round(sum(N)/len(N), 3)
    m = max(N)
    n = min(N)

    o = p = q = 0
    y = 0

    while len(N) > 0:

        o = N[0]
        N.remove(N[0])
        p = N[0]
        N.remove(N[0])
        q = N[0]
        N.remove(N[0])

        y += (int(o)+int(p)+int(q)) % q

    #print(str(s + ' ' + m + ' ' + n + ' '+y))
    print(s, m, n, y)
